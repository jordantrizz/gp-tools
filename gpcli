#!/usr/bin/env bash
# Wrapper

# -- Check root
if [ ! -f .development ]; then
	if [ "$EUID" -ne 0 ]
		then echo "Please run as root"
		exit
	fi
fi

# -- Ingest Variables
POSITIONAL=()
while [[ $# -gt 0 ]]
do
key="$1"

case $key in
    -s|--script)
    SCRIPT="$2"
    shift # past argument
    shift # past value
    ;;
    -c|--command)
    COMMAND="$2"
    shift # past argument
    shift # past value
    ;;
    *)    # unknown option
    POSITIONAL+=("$1") # save it in an array for later
    shift # past argument
    ;;
esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

if [[ -n $1 ]]; then
    echo "Last line of file specified as non-opt/last argument:"
    tail -1 "$1"
fi

# -- Variables
SCRIPTPATH="$(dirname "$(readlink -f "$0")")"
SCRIPTS=`find $SCRIPTPATH -maxdepth 1 -type f -executable -printf "%f\n"`
# -- Functions
help () {
        echo "Syntax: gpcli -s <script> | -c <command> (parameters)"
        echo ""
        echo "Available scripts"
        echo ""
	echo "$SCRIPTS"
        echo ""
        echo "Available commands"
        echo ""
	echo "help - this screen"        
	echo "update   - update this script!"
	echo "install  - symlink script system wide"
	echo ""
	echo "Running from $SCRIPTPATH"
	
}

update () {
	git -C $SCRIPTPATH pull
}

install () {
	ln -s $SCRIPTPATH/gpcli /usr/local/sbin/gpcli
}

# -- Main Loop
if [ ! -z $SCRIPT ]; then
	if [ -f "$SCRIPTPATH/$SCRIPT" ]; then
               exec $SCRIPTPATH/$SCRIPT
	else
		echo "$SCRIPT script doesn't exist"
	fi
elif [ ! -z $COMMAND ]; then
	if [ "$(type -t $COMMAND)" = 'function' ]; then
		$COMMAND
	fi
else
	help
fi


#elfi [ ! -z $SCRIPT ]; then
#	if [ -f "$SCRIPTPATH/$1" ]; then
#		exec $SCRIPTPATH/$1
#	else
#		echo "$1 scrupt doesn't exist"
#	fi
#fi
